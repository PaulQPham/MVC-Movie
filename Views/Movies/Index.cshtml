@using System.Linq.Expressions;
@model MvcMovie.Models.MovieGenreViewModel

@{
    ViewData["Title"] = "Movies";
   
}

<h2>Movies</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="movieGenre" asp-items="Model.genres" value="@Model.movieGenre">
            <option value="">All</option>
        </select>

        Title: <input type="text" name="movieString">
        Actor: <input type="text" name="actor" value="@ViewBag.CurrentFilter">
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th></th>
            <th>
                @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Release Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Genre", "Index", new { sortOrder = ViewBag.GenreSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!--Populate list of Movies-->
        @foreach (var item in Model.movies)
        {
            <tr onclick="location.href = '@Url.Action("", new { currentFilter = ViewBag.CurrentFilter, movieID = item.ID, page = ViewBag.CurrentPage } )' "
                bgcolor=@(Model.selectedMovie == null || item.ID != Model.selectedMovie.ID ? "#FFFFFF" : "#DFF0D8")>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">
                        <img src=@Html.DisplayFor(modelItem => item.Image) style="width:67px;height:99px;">
                    </a>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a> |
                    @Html.ActionLink("Select", "Index", new { currentFilter = ViewBag.CurrentFilter, movieID = item.ID, page = ViewBag.CurrentPage })
                </td>
            </tr>
        }
    </tbody>
</table>


<!--Page Buttons-->
@{
    var prevDisabled = !Model.movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.movies.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.movies.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.movies.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<!--List Roles for selected movie-->
@if (Model.selectedMovie != null)
{
    <h2>Cast of @Model.selectedMovie.Title</h2>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Actor</th>
                <th>Character</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.roles)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Actor, "Details", "Actors", new { actorName = item.Actor })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Character)
                    </td>
                </tr>
            }
        </tbody>
    </table>

}