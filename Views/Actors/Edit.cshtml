@model MvcMovie.Models.MovieCastViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Actor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="actor.ID" />
            <div class="form-group">
                <label asp-for="actor.Name" class="control-label"></label>
                <input asp-for="actor.Name" class="form-control" />
                <span asp-validation-for="actor.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="actor.BirthDate" class="control-label"></label>
                <input asp-for="actor.BirthDate" class="form-control" />
                <span asp-validation-for="actor.BirthDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="actor.Hometown" class="control-label"></label>
                <input asp-for="actor.Hometown" class="form-control" />
                <span asp-validation-for="actor.Hometown" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="actor.BirthName" class="control-label"></label>
                <input asp-for="actor.BirthName" class="form-control" />
                <span asp-validation-for="actor.BirthName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<h4>Movie Roles</h4>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Character</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.roles)
            {
            <tr>
                <td>
                    @Html.ActionLink(item.Movie, "Details", "Movies", new { title = item.Movie })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Character)
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", "MovieRoles", new { actorName = item.Actor, movieTitle = item.Movie })
                </td>
            </tr>
        }
        <tr id="btn-row">
            <td>
                <button type="button" class="btn btn-default" id="addRole">Add</button>
            </td>  
            <td></td><td></td>
        </tr>
        <tr id="addRow">
            <td>
                <select asp-for="" asp-items=""></select>
            </td>
            <td>
                <input asp-for="newRole" class="form-control" />
                <span asp-validation-for="newRole" class="text-danger"></span>
            </td>
            <td>
                <button type="button" class="btn btn-default" id="save">Save</button>
                <button type="button" class="btn btn-default" id="cancel">Cancel</button>
            </td>
        </tr>
    </tbody>
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $('#addRow').hide();
    </script>
    <script>
        $('#addRole').on('click', () => {
          $('#addRow').toggle();
          $('#btn-row').hide();
        });
    </script>
    <script>
        $('#cancel').on('click', () => {
          $('#addRow').toggle();
          $('#btn-row').toggle();
        });
    </script>
}
